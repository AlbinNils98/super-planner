
extend type Query {
    getCalendars: [CalendarBasicDto!]!
    getCalendar(calendarId: Int!): CalendarDto!
}

extend type Mutation {
    addCalendar(name: String!): CalendarDto!
    updateCalendar(calendarId: Int! name: String): CalendarDto!
    deleteCalendar(calendarId: Int!): Boolean!
    addCalendarItem(calendarId: Int!, text: String!, date: Date!): CalendarItemDto!
    updateCalendarItem(itemId: Int!, text: String): CalendarItemDto!
    deleteCalendarItem(itemId: Int!): Boolean!
}

type CalendarDto {
    id: Int!
    name: String!
    items: [CalendarItemDto!]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type CalendarBasicDto {
    id: Int!
    name: String!
    createdAt: DateTime!,
    updatedAt: DateTime!
}

type CalendarItemDto {
    id: Int
    text: String!
    date: Date!
    createdAt: DateTime!
    updatedAt: DateTime!
}