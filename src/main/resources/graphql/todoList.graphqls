
extend type Query {
    getTodoLists: [TodoListBasicDto!]!
    getTodoList(listId: Int!): TodoListDto!
}

extend type Mutation {
    createTodoList(name: String!): TodoListDto!
    updateTodoList(listId: Int!, name: String): TodoListDto!
    deleteTodoList(listId: Int!): Boolean!
    addTodoListItem(listId: Int!, text: String!): TodoListItemDto!
    updateTodoListItem(itemId: Int!, isCompleted: Boolean): TodoListItemDto!
    deleteTodoListItem(itemId: Int!): Boolean!
}

type TodoListBasicDto {
    id: Int!
    name: String!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type TodoListDto {
    id: Int!,
    name: String!,
    items: [TodoListItemDto!]!
    createdAt: DateTime!
    updatedAt: DateTime!
}

type TodoListItemDto {
    id: Int!,
    text: String!,
    completed: Boolean!,
    createdAt: DateTime!
    updatedAt: DateTime!
}